daemon off;
#worker_processes  auto;
worker_processes  1;
user www-data;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    sendfile        on;

    keepalive_timeout  0;

    gzip  on;

    server {
        set $root             '/srv';
        listen                80;
        root                  $root;
        charset               utf-8;
       #default_type          application/octet-stream;
        default_type          application/json;
        merge_slashes         off;

        proxy_http_version    1.1;
        proxy_set_header      Host              $host;
        proxy_set_header      X-Real-IP         $remote_addr;
        proxy_set_header      X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto $scheme;
        proxy_set_header      X-Original-URI    $request_uri;
        proxy_set_header      Connection        "upgrade";
        proxy_set_header      Upgrade           $http_upgrade;
        proxy_connect_timeout 1800s;
        proxy_read_timeout    1800s;
        proxy_send_timeout    1800s;
        client_max_body_size  10m;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            autoindex on;
            autoindex_format json;
        }

        location /_matrix/ {
            proxy_pass http://127.0.0.1:6167$request_uri;
            proxy_set_header Host $http_host;
            proxy_buffering off;
        }

        location /.well-known/matrix/server {
            default_type application/json;
            return 200 '{"m.server": "SERVER_NAME_PLACEHOLDER"}';
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        error_page      500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # location /path/to/ {
        #     rewrite ^/path/to/(.*)$ /$1 break;
        #     proxy_set_header Host route.s;
        #     proxy_pass http://route.s;
        # }

    }

}
