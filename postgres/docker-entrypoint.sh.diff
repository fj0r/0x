--- docker-entrypoint.sh.origin	2024-05-09 14:10:41.646590745 +0800
+++ docker-entrypoint.sh	2024-05-09 18:34:44.655801509 +0800
@@ -298,6 +298,61 @@
 	return 1
 }
 
+###{{{ main
+pg_calc_mem() {
+	IFS=',' read -ra mem <<< "$1"
+	local shared=$(( ${mem[0]} * 40 / 100 ))
+	local temp=${mem[2]:-8}
+	local conn=$(( ${mem[0]} * 60 / 100 / (${mem[1]} + ${temp}) ))
+	echo "shared_buffers = ${shared}MB"
+	echo "work_mem = ${mem[1]}MB"
+	echo "temp_buffers = ${temp}MB"
+	echo "max_connections = ${conn}"
+}
+
+pg_setup_conf() {
+	echo "## Setup \"$PGDATA/usr.conf\""
+	echo "" > $PGDATA/usr.conf
+
+	for i in "${!PGCONF_@}"; do
+		local k=$(echo ${i:7} | tr '[:upper:]' '[:lower:]' | sed 's!__!.!g')
+		local v=$(eval "echo \"\$$i\"")
+		if [ -n "$v" ]; then
+			echo "$k = $v" >> $PGDATA/usr.conf
+		fi
+	done
+
+	if [ -n "$POSTGRES_MAX_MEMORY_USAGE" ]; then
+		pg_calc_mem "$POSTGRES_MAX_MEMORY_USAGE" >> $PGDATA/usr.conf
+	fi
+
+	echo "pg_stat_statements.max = 10000" >> $PGDATA/usr.conf
+	echo "pg_stat_statements.track = all" >> $PGDATA/usr.conf
+}
+
+initialize_password() {
+	if [ -z "$POSTGRES_PASSWORD" ]; then
+		export POSTGRES_PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 19)
+		echo
+		echo "export \$POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
+		echo
+	fi
+}
+
+start_readyset() {
+	if [ -n "$READYSET_MEMORY_LIMIT" ]; then
+		echo "## starting readyset"
+        readyset --address $"0.0.0.0:${READYSET_PORT:-5433}" \
+            --database-type postgresql \
+            --upstream-db-url postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB:-postgres} \
+            --no-color --log-path /var/lib/readyset \
+            --storage-dir /var/lib/readyset \
+            --memory-limit ${READYSET_MEMORY_LIMIT} &
+	fi
+}
+
+
+###}}}
 _main() {
 	# if first arg looks like a flag, assume we want to run postgres server
 	if [ "${1:0:1}" = '-' ]; then
@@ -315,6 +370,10 @@
 
 		# only run initialization on an empty data directory
 		if [ -z "$DATABASE_ALREADY_EXISTS" ]; then
+###{{{ init
+			initialize_password
+
+###}}}
 			docker_verify_minimum_env
 
 			# check dir permissions to reduce likelihood of half-initialized database
@@ -322,6 +381,10 @@
 
 			docker_init_database_dir
 			pg_setup_hba_conf "$@"
+###{{{ user
+			echo "include_if_exists = 'usr.conf'">> $PGDATA/postgresql.conf
+
+###}}}
 
 			# PGPASSWORD is required for psql when authentication is required for 'local' connections via pg_hba.conf and is otherwise harmless
 			# e.g. when '--auth=md5' or '--auth-local=md5' is used in POSTGRES_INITDB_ARGS
@@ -348,6 +411,11 @@
 		fi
 	fi
 
+###{{{ hook
+	pg_setup_conf
+	start_readyset
+
+###}}}
 	exec "$@"
 }
 
