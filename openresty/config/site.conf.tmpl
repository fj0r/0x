
        set $root             '{{ root }}';
        listen                {{ port }};
        root                  $root;
        charset               utf-8;
        default_type          application/{{ DEFAULT_TYPE }};

        proxy_http_version    1.1;
        proxy_set_header      Host              $host;
        proxy_set_header      X-Real-IP         $remote_addr;
        proxy_set_header      X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto $scheme;
        proxy_set_header      X-Original-URI    $request_uri;
        proxy_set_header      Connection        "upgrade";
        proxy_set_header      Upgrade           $http_upgrade;
        proxy_connect_timeout {{ TIMEOUT }};
        proxy_read_timeout    {{ TIMEOUT }};
        proxy_send_timeout    {{ TIMEOUT }};
        client_max_body_size  {{ MAXBODY }};
        chunked_transfer_encoding on;

        # resolver
        {%- if resolver %}
        resolver {{ resolver }};
        {%- endif %}

        # log apm
        {%- if LOG_FORMAT == "apm" %}
        access_log  /var/log/openresty/access.log   apm;
        {%- endif %}

        # fastcgi
        {%- if fastcgi == "php" %}
        location / {
            index index.php index.html index.htm;
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.php?s=$1 last;
                break;
            }
        }

        location ~ \.{{ fastcgi }}$ {
            include fastcgi_params;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            {%- if fastcgi_pathinfo %}
            fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            {%- endif %}
            fastcgi_pass {{ FASTCGI_PASS }};
        }
        {%- else %}
        location / {
            autoindex on;
            autoindex_format json;
        }
        {%- endif %}

        # real_remote
        {%- if real_remote %}
        set_by_lua_block $real_remote {
            if ngx.var.http_x_forwarded_for then
                for r in ngx.var.http_x_forwarded_for:gmatch('([^,]+)') do
                    return r
                end
            end
            return ngx.var.remote_addr
        }
        {%- endif %}

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        error_page      500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        {%- if location %}
        {%- for i in location %}
        location {{ i.path }} {
            {%- if i.rewrite %}
            rewrite {{ i.rewrite.from }} {{ i.rewrite.to }} break;
            {%- endif %}
            {%- if i.backend %}
            proxy_set_header Host $host;
            proxy_pass {{ i.backend }};
            {%- elif i.root %}
            root {{i.root}};
            {%- if i.autoindex %}
            autoindex on;
            {%- endif %}
            {%- endif %}
        }
        {%- endfor %}
        {%- endif %}
