name: build images
on:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs: {}
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fj0r/0x
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !endsWith(github.event.head_commit.message, '~') }}
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: fj0r
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          ci:
          - ci/**
          flink:
          - flink/**
          java:
          - java/**
          lego:
          - lego/**
          libretranslate:
          - libretranslate/**
          maddy:
          - maddy/**
          mail:
          - mail/**
          mattermost:
          - mattermost/**
          mihomo:
          - mihomo/**
          nebula:
          - nebula/**
          nexus:
          - nexus/**
          nginx:
          - nginx/**
          ollama:
          - ollama/**
          openresty:
          - openresty/**
          or:
          - or/**
          php:
          - php/**
          playwright:
          - playwright/**
          postgres:
          - postgres/**
          registry:
          - registry/**
          reproxy:
          - reproxy/**
          risingwave:
          - risingwave/**
          sidecar:
          - sidecar/**
          skipper:
          - skipper/**
          spark:
          - spark/**
          surreal:
          - surreal/**
          typst:
          - typst/**
          v2ray:
          - v2ray/**
          vaultwarden:
          - vaultwarden/**
          vllm:
          - vllm/**
          wal-g:
          - wal-g/**
          warpgate:
          - warpgate/**
          wg:
          - wg/**
          whisper:
          - whisper/**
    - name: Build ci
      if: steps.changes.outputs.ci == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: ci
        file: ci/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ci
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BASEIMAGE=${{ env.REGISTRY }}/fj0r/io:latest
    - name: Build flink
      if: steps.changes.outputs.flink == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: flink
        file: flink/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:flink
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build java
      if: steps.changes.outputs.java == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: java
        file: java/jdk-17.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:java-jdk-17
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build lego
      if: steps.changes.outputs.lego == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: lego
        file: lego/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:lego
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build libretranslate
      if: steps.changes.outputs.libretranslate == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: libretranslate
        file: libretranslate/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:libretranslate
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build maddy
      if: steps.changes.outputs.maddy == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: maddy
        file: maddy/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:maddy
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build mail
      if: steps.changes.outputs.mail == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: mail
        file: mail/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mail
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build mattermost
      if: steps.changes.outputs.mattermost == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: mattermost
        file: mattermost/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mattermost
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build mihomo
      if: steps.changes.outputs.mihomo == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: mihomo
        file: mihomo/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mihomo
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build mihomo
      if: steps.changes.outputs.mihomo == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: mihomo
        file: mihomo/cloudflare.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mihomo-cloudflare
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build nebula
      if: steps.changes.outputs.nebula == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: nebula
        file: nebula/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nebula
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build nexus
      if: steps.changes.outputs.nexus == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: nexus
        file: nexus/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nexus
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build nginx
      if: steps.changes.outputs.nginx == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: nginx
        file: nginx/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nginx
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build ollama
      if: steps.changes.outputs.ollama == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: ollama
        file: ollama/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ollama
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build playwright
      if: steps.changes.outputs.playwright == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: playwright
        file: playwright/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:playwright
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build postgres
      if: steps.changes.outputs.postgres == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: postgres
        file: postgres/17.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:postgres-17
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build registry
      if: steps.changes.outputs.registry == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: registry
        file: registry/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:registry
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build reproxy
      if: steps.changes.outputs.reproxy == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: reproxy
        file: reproxy/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:reproxy
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build risingwave
      if: steps.changes.outputs.risingwave == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: risingwave
        file: risingwave/py.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:risingwave-py
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build sidecar
      if: steps.changes.outputs.sidecar == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: sidecar
        file: sidecar/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sidecar
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build surreal
      if: steps.changes.outputs.surreal == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: surreal
        file: surreal/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:surreal
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build vaultwarden
      if: steps.changes.outputs.vaultwarden == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: vaultwarden
        file: vaultwarden/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:vaultwarden
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build vllm
      if: steps.changes.outputs.vllm == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: vllm
        file: vllm/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:vllm
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build wal-g
      if: steps.changes.outputs.wal-g == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: wal-g
        file: wal-g/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:wal-g
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build warpgate
      if: steps.changes.outputs.warpgate == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: warpgate
        file: warpgate/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:warpgate
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build wg
      if: steps.changes.outputs.wg == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: wg
        file: wg/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:wg
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build wg
      if: steps.changes.outputs.wg == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: wg
        file: wg/web.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:wg-web
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build whisper
      if: steps.changes.outputs.whisper == 'true' || github.event.name == 'workflow_dispatch'
      uses: docker/build-push-action@v4
      with:
        context: whisper
        file: whisper/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:whisper
        labels: ${{ steps.meta.outputs.labels }}
