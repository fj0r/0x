name: llm

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ main, llm ]
  workflow_dispatch:
    inputs: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fj0r/0x


jobs:
  build:

    runs-on: ubuntu-latest
    if: ${{ !endsWith(github.event.head_commit.message, '~') }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: fj0r
          password: ${{ secrets.GHCR_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'ollama/**'

      - name: Build ollama
        if: steps.changes.outputs.src == 'true' || github.event.name == 'workflow_dispatch'
        uses: docker/build-push-action@v4
        with:
          context: ollama
          file: ollama/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ollama
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build vllm
        if: steps.changes.outputs.src == 'true' || github.event.name == 'workflow_dispatch'
        uses: docker/build-push-action@v4
        with:
          context: ollama
          file: ollama/vllm.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:vllm
          labels: ${{ steps.meta.outputs.labels }}

      #- name: Build llava-phi3
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: llm
      #    file: llm/llava-phi3.Dockerfile
      #    push: ${{ github.event_name != 'pull_request' }}
      #    tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:llava-phi3
      #    labels: ${{ steps.meta.outputs.labels }}

      #- name: Build flag_embedding
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: llm
      #    file: llm/flag_embedding.Dockerfile
      #    push: ${{ github.event_name != 'pull_request' }}
      #    tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:flag_embedding
      #    labels: ${{ steps.meta.outputs.labels }}

